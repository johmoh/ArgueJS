/** @license MIT (http://opensource.org/licenses/MIT) */
if("function"!=typeof define)var define=require("amdefine")(module);define(function(){"use strict";return function(r){return r()}(function(){function r(r){return"boolean"==typeof r}function t(r){return r instanceof Array}function e(r){return"function"==typeof r}function n(r){return r instanceof Object}function i(r){return e(r)}function o(r){var t,e,n,i=r;if(i)for(t=arguments.length,e=1;t>e;++e)n=arguments[e],i=i.replace(RegExp("\\{"+e+"\\}","g"),n);return i}function a(r,e,n,i,o){if(o){if(e===f.TAIL)return t(r);if(void 0===r)return n===!0;if(null===r)return i===!0}else{if(e===f.TAIL)return!0;if(void 0===r)return n===!0;if(null===r)return i===!0}return e===f.ANYTYPE?!0:O(r)===e||r instanceof e}function f(){}var u=!1,c=!1,l=!0,s="bad call: ",p=s+'type of "{1}" is invalid.',h=s+"no arguments. function call is not compatible with function specification.",d=s+"too many arguments. function call is not compatible with function specification.",m=s+"parameter specification #{1} is not an object structure.",w='parameter specification "{1}": ',g=w+"default value is not compatible to parameter type",v=w+'value of "{2}" has incorrect type (must be {3})',E=w+'"{2}" is invalid.',y=w+"type specification is missing.",b="parameter specification: parameter #{1} has no name",T=w+"specification contains more than one element.",A=w+'"{2}" is {3} allowed for the tail-parameter in a variadic function',k="in a variadic function the tail-parameter must be the last parameter in the function specification.",I=w+"type specification has too many elements.",N=w+'type specification contains unknown option "{2}".',Y="Incompatible function call: ",j=Y+'mandatory argument "{1}" has no value.',z=Y+"too many arguments. {1}",L=function(){var r=Object.prototype.toString.call(arguments);return function(t){return Object.prototype.toString.call(t)===r}}(),O=function(r){return void 0===r?void 0:null===r?null:r.constructor},P=function(){var r=/^[_a-z$]{1}[_a-z0-9$]*$/i;return function(t){return t?r.test(t):!1}}();return f.ANYTYPE=function(){},f.TAIL=function(){},f.getArguments=function(s,w){var Y,O,_,S,U,$,q,x,F,R,V,B,C,D,G,H,J,K,M,Q;if(1===arguments.length){if(w=arguments[0],!w||w.length>0)throw Error(o(z,"no parameters defined but arguments given"));return{}}if(2!=arguments.length)throw Error(arguments.length<1?h:d);if(!t(s))throw Error(o(p,"_functionSpecification"));if(!L(w)&&!t(w))throw Error(o(p,"_arguments"));for(Y=s.length,O={},V=w.length,B=0,C=w[B],D=0;Y>D;++D){if(G=s[D],"object"!=typeof G)throw Error(o(m,D));_=void 0,S=void 0,U=void 0,$=void 0,q=void 0,x=void 0,F=void 0,R=void 0;for(H in G)if(G.hasOwnProperty(H)){if(_)throw Error(o(T,_));if(_=H,!P(_))throw Error(o(E,_,"name"));if(J=G[H],e(J))U=!1,S=J;else if(t(J)){if(J.length<1)throw Error(o(y,_));if(U=!0,S=J[0],J.length>=2){if(J.length>2)throw Error(o(I,_));$=!0,q=J[1]}}else{if(!n(J))throw Error(o(E,_,"type"));for(K in J)if(J.hasOwnProperty(K))switch(K){case"type":U=t(J.type),S=U?J.type[0]:J.type;break;case"defaultValue":$=!0,U=!0,q=J[K];break;case"allowUndefined":if(x=J[K],!r(x))throw Error(o(v,_,"allowUndefined","boolean"));break;case"allowNull":if(F=J[K],!r(F))throw Error(o(v,_,"allowNull","boolean"));break;case"parenthesizeTail":if(R=J[K],!r(R))throw Error(o(v,_,"parenthesizeTail","boolean"));break;default:throw Error(o(N,_,K))}}}if(!_)throw Error(o(b,D));if(!i(S))throw Error(o(E,_,"type"));if(S!==f.TAIL){if(void 0!==R)throw Error(o(A,_,"parenthesizeTail","only"));void 0===x&&(x=c),void 0===F&&(F=u)}else{if(void 0!==x)throw Error(o(A,_,"allowUndefined","not"));if(void 0!==F)throw Error(o(A,_,"allowNull","not"));if(D!=Y-1)throw Error(k);void 0===R&&(R=l)}if(V>B&&a(C,S,x,F,!1)){if(S===f.TAIL){if(++B<V){M=[C];do M[M.length]=w[B];while(++B<V);O[_]=M}else O[_]=!t(C)||R?[C]:C;B=V;break}O[_]=C,++B,V>B&&(C=w[B])}else{if(!U)throw Error(o(j,_));if($){if(Q=S!==Function&&S!==f.ANYTYPE&&e(q)?q():q,!a(Q,S,x,F,!0))throw Error(o(g,_));O[_]=Q}}}if(V>B)throw Error(o(z,"there are arguments left but all parameters are processed."));return O},f})});
/*
//@ sourceMappingURL=argue2.min.js.map
*/